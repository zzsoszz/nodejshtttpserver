/*!
 * VERSION: 0.2.0
 * DATE: 2016-07-12
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.
 * PhysicsPropsPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 *
 * @author: Jack Doyle, jack@greensock.com
 */
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";
    var t = function (t, i, e, r, o, s) {
        this.p = i,
        this.f = "function" == typeof t[i],
        this.start = this.value = this.f ? t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]() : parseFloat(t[i]),
        this.velocity = e || 0,
        this.v = this.velocity / s,
        r || 0 == r ? (this.acceleration = r, this.a = this.acceleration / (s * s)) : this.acceleration = this.a = 0,
        this.friction = 1 - (o || 0)
    },
        i = Math.random(),
        e = _gsScope._gsDefine.globals,
        r = e.com.greensock.core.Animation._rootFramesTimeline,
        o = "",
        s = "PhysicsPropsPlugin",
        n = String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109),
        a = String.fromCharCode(47, 114, 101, 113, 117, 105, 114, 101, 115, 45, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 47),
        h = function (t) {
            // for (var i = -1 !== (window ? window.location.href : "").indexOf(String.fromCharCode(103, 114, 101, 101, 110, 115, 111, 99, 107)) && -1 !== t.indexOf(String.fromCharCode(108, 111, 99, 97, 108, 104, 111, 115, 116)), e = [n, String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 105, 111), String.fromCharCode(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118), String.fromCharCode(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), String.fromCharCode(99, 100, 112, 110, 46, 105, 111), String.fromCharCode(103, 97, 110, 110, 111, 110, 46, 116, 118), String.fromCharCode(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116), String.fromCharCode(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116), String.fromCharCode(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107), String.fromCharCode(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116), String.fromCharCode(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109), String.fromCharCode(116, 119, 101, 101, 110, 108, 105, 116, 101, 46, 99, 111, 109), String.fromCharCode(112, 108, 110, 107, 114, 46, 99, 111), String.fromCharCode(104, 111, 116, 106, 97, 114, 46, 99, 111, 109), String.fromCharCode(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)], r = e.length; --r > -1;) if (-1 !== t.indexOf(e[r])) return !0;
            // return i && window && window.console && console.log(String.fromCharCode(87, 65, 82, 78, 73, 78, 71, 58, 32, 97, 32, 115, 112, 101, 99, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + s + String.fromCharCode(32, 105, 115, 32, 114, 117, 110, 110, 105, 110, 103, 32, 108, 111, 99, 97, 108, 108, 121, 44, 32, 98, 117, 116, 32, 105, 116, 32, 119, 105, 108, 108, 32, 110, 111, 116, 32, 119, 111, 114, 107, 32, 111, 110, 32, 97, 32, 108, 105, 118, 101, 32, 100, 111, 109, 97, 105, 110, 32, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 32, 105, 115, 32, 97, 32, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 32, 98, 101, 110, 101, 102, 105, 116, 32, 111, 102, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 46, 32, 80, 108, 101, 97, 115, 101, 32, 115, 105, 103, 110, 32, 117, 112, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98, 47, 32, 97, 110, 100, 32, 116, 104, 101, 110, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 116, 104, 101, 32, 39, 114, 101, 97, 108, 39, 32, 118, 101, 114, 115, 105, 111, 110, 32, 102, 114, 111, 109, 32, 121, 111, 117, 114, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 97, 99, 99, 111, 117, 110, 116, 32, 119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 110, 111, 32, 115, 117, 99, 104, 32, 108, 105, 109, 105, 116, 97, 116, 105, 111, 110, 115, 46, 32, 84, 104, 101, 32, 102, 105, 108, 101, 32, 121, 111, 117, 39, 114, 101, 32, 117, 115, 105, 110, 103, 32, 119, 97, 115, 32, 108, 105, 107, 101, 108, 121, 32, 100, 111, 119, 110, 108, 111, 97, 100, 101, 100, 32, 102, 114, 111, 109, 32, 101, 108, 115, 101, 119, 104, 101, 114, 101, 32, 111, 110, 32, 116, 104, 101, 32, 119, 101, 98, 32, 97, 110, 100, 32, 105, 115, 32, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 116, 111, 32, 108, 111, 99, 97, 108, 32, 117, 115, 101, 32, 111, 114, 32, 111, 110, 32, 115, 105, 116, 101, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 46)),
            // i
            return true;
        }(window ? window.location.host : ""),
        p = _gsScope._gsDefine.plugin({
            propName: "physicsProps",
            version: "0.2.0",
            API: 2,
            init: function (i, e, p, f) {
                if ("function" == typeof e && (e = e(i)), !h) return window.location.href = "http://" + n + a + "?plugin=" + s + "&source=" + o,
                !1;
                this._target = i,
                this._tween = p,
                this._runBackwards = p.vars.runBackwards === !0,
                this._step = 0;
                for (var c, l, _ = p._timeline, g = 0; _._timeline;) _ = _._timeline;
                this._stepsPerTimeUnit = _ === r ? 1 : 30,
                this._props = [];
                for (c in e) l = e[c],
                "function" == typeof l && (l = l(f, i)),
                (l.velocity || l.acceleration) && (this._props[g++] = new t(i, c, l.velocity, l.acceleration, l.friction, this._stepsPerTimeUnit), this._overwriteProps[g] = c, l.friction && (this._hasFriction = !0));
                return h
            },
            set: function () {
                var t, i, e, r, o, s, n = this._props.length,
                    a = this._tween._time,
                    h = this._target;
                if (this._runBackwards && (a = this._tween._duration - a), this._hasFriction) {
                        if (a *= this._stepsPerTimeUnit, e = (0 | a) - this._step, r = a % 1, 0 > e) for (; --n > -1;) {
                            for (t = this._props[n], o = -e; --o > -1;) t.value -= t.v,
                            t.v /= t.friction,
                            t.v -= t.a;
                            i = t.value + t.v * r,
                            t.m && (i = t.m(i, h)),
                            t.f ? h[t.p](i) : h[t.p] = i
                        } else for (; --n > -1;) {
                            for (t = this._props[n], o = e; --o > -1;) t.v += t.a,
                            t.v *= t.friction,
                            t.value += t.v;
                            i = t.value + t.v * r,
                            t.m && (i = t.m(i, h)),
                            t.f ? h[t.p](i) : h[t.p] = i
                        }
                        this._step += e
                    } else for (s = a * a * .5; --n > -1;) t = this._props[n],
                i = t.start + (t.velocity * a + t.acceleration * s),
                t.m && (i = t.m(i, h)),
                t.f ? h[t.p](i) : h[t.p] = i
            }
        }),
        f = p.prototype;
    f._kill = function (t) {
            for (var i = this._props.length; --i > -1;) this._props[i].p in t && this._props.splice(i, 1);
            return this._super._kill.call(this, t)
        },
    f._mod = function (t) {
            for (var i, e = this._props.length; --e > -1;) i = t[this._props[e].p] || t.physicsProps,
            "function" == typeof i && (this._props[e].m = i)
        },
    p._autoCSS = !0,
    p._cssRegister = function () {
            var t = e.CSSPlugin;
            if (t) {
                var r = t._internals,
                    o = r._parseToProxy,
                    s = r._setPluginRatio,
                    n = r.CSSPropTween;
                r._registerComplexSpecialProp("physicsProps", {
                        parser: function (t, e, r, a, h, f) {
                            f = new p;
                            var c, l, _ = {};
                            e.scale && (e.scaleX = e.scaleY = e.scale, delete e.scale);
                            for (c in e) _[c] = i++;
                            return l = o(t, _, a, h, f),
                            h = new n(t, "physicsProps", 0, 0, l.pt, 2),
                            h.data = l,
                            h.plugin = f,
                            h.setRatio = s,
                            f._onInitTween(l.proxy, e, a._tween),
                            h
                        }
                    })
            }
        }
}),
_gsScope._gsDefine && _gsScope._gsQueue.pop()();